#!/usr/bin/python
# -*- coding: UTF-8 -*-
#
# First release: 25/08/2012
# 
#########################################################
# Name: pysplitcue
# Porpose: script for cut audio file with cue file
# Platform: Mac OsX, Gnu/Linux
# Writer: Gianluca Pernigoto <jeanlucperni@gmail.com>
# Copyright: (c) 2010-2014 Gianluca Pernigoto <jeanlucperni@gmail.com>
# license: GPL3
# Rev (01) January 26 2015
#########################################################

import sys
import os
import glob
import shutil
import shlex
import subprocess
from subprocess import call, check_call
from pysplc.str_utils import strings

prg_name = strings()[0]
version = strings()[1]
webpage = strings()[2]
blogspot = strings()[3]
long_help = strings()[4]
short_help = strings()[5]

diz = {'wav:wav':'shnsplit -o wav -f *.cue -t "%n - %t.split" *.wav',
'wav:flac':'shnsplit -o flac -f *.cue -t "%n - %t" *.wav && cuetag.sh *.cue *.flac',
'wav:ape':'shnsplit -o ape -f *.cue -t "%n - %t" *.wav',
'flac:wav':'shnsplit -o wav -f *.cue -t "%n - %t" *.flac',
'flac:flac':'shnsplit -o flac -f *.cue -t "%n - %t.split" *.flac && cuetag *.cue *.split.flac',
'flac:ape':'shnsplit -o ape -f *.cue -t "%n - %t" *.flac',
'ape:wav':'shnsplit -o wav -f *.cue -t "%n - %t" *.ape',
'ape:flac':'shnsplit -o flac -f *.cue -t "%n - %t" *.ape && cuetag *.cue *.flac',
'ape:ape':'shnsplit -o ape -f *.cue -t "%n - %t.split" *.ape'}

print "\033[1m%s %s\033[0m" % (prg_name, version)

################################################################
def positional_parameter():
  """
  valuta gli argomenti (parametri posizionali) passati dopo
  il nome del programma
  """
  if len(sys.argv) == 1: #err
    sys.exit("pysplitcue: missing option\n%s" % (short_help))
    
  if sys.argv[1] == "--version" or sys.argv[1] == "-v":
    if len(sys.argv) == 3:
      sys.exit("unexpected operation '%s'\nTry: 'pysplitcue --help'" % (
                                                          sys.argv[2]))
    print version
    return
      
  elif sys.argv[1] == "--help" or sys.argv[1] == "-h": 
    if len(sys.argv) == 3:
      sys.exit("unexpected operation '%s'\nTry: 'pysplitcue --help'" % (
                                                           sys.argv[2]))
    print long_help
    return
  
  #elif sys.argv[1] in opt: # only option
  elif diz.has_key(sys.argv[1]):
    if len(sys.argv) == 2:
      option_arg = sys.argv[1]
      run_process(option_arg)
      
    elif len(sys.argv) == 3:
      try:
        option_arg = sys.argv[1]
        os.chdir(sys.argv[2])
        run_process(option_arg)
      except OSError:
        sys.exit("pysplitcue: error: non-existent path: %s" % (sys.argv[2]))
        
  else: #err
    sys.exit("Invalid option '%s'\nTry: 'pysplitcue --help'" % (sys.argv[1]))
    
################################################################
#def makedir_move(ext,name_dir):
  #"""
  #crea la directory e sposta i file 
  #(ext:estensione, name_dir:nome directory)
  #"""
  #try: # se la cartella esiste non da OSError ma prosegue
    #os.mkdir("%s"%(name_dir))
  #except: OSError
    
  #files = glob.glob("*%s"%(ext))
  #for sposta in files: 
    ## cicla sui file di una data estens. per spostarli in altra directory
    #shutil.move(sposta, '%s'%(name_dir))
    
################################################################
def run_process(option_arg):
  """
  start splitting process and conversion, there is a small error 
  management, which can be improved
  """
  
  command = diz [option_arg]
  try:
    print command
    check_call(command, shell = True)
    #makedir_move(".split.wav","Formato-wav")
    print "\033[1m...done.\033[0m"
      
  except subprocess.CalledProcessError:
    sys.exit("\033[31;1mERROR:\033[0m check dependencies please [shntool, flac, monkey's audio codec, wavpack]")
    
positional_parameter()

