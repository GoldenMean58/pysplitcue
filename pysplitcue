#!/usr/bin/python
# -*- coding: UTF-8 -*-
#
# First release: 25/08/2012
# 
#########################################################
# Name: pysplitcue
# Porpose: script for cut audio file with cue file
# Platform: Mac OsX, Gnu/Linux
# Writer: Gianluca Pernigoto <jeanlucperni@gmail.com>
# Copyright: (c) 2010-2014 Gianluca Pernigoto <jeanlucperni@gmail.com>
# license: GPL3
# Rev (01) January 26 2015
#########################################################
#
# 
# Dependencies:
#              - cuebreakpoints (appartenente al pacchetto cuetools)
#              - shnsplit (facente parte del pacchetto shntool).
#              - flac (free lossless audio codec)
#              - monkeys-audio e libmac2 (monkey's audio lossless audio 
#                codec - binary)
#              - wavpack
#
# Ozionals dependencies:    
#              - mp3splt (interfaccia a riga di comando per dividere MP3 
#                e Ogg Vorbis senza ricodifica ) 

##########################################################

import sys
import os
import glob
import shutil
from subprocess import call
""" 
L'oggetto call del modulo subprocess è fondamentalmente proprio come 
l'oggetto Popen e prende tutti gli stessi argomenti, ma semplicemente 
attende che i comandi completino e ti dà il codice di ritorno
"""

help_long = """
PYSPLITCUE version 0.6
release date: 25-08-2012 (http://itamburiditux.blogspot.com/)

Usage: pysplitcue  [OPTIONS] [PATH-NAME]


OPTIONS:

   *  The argument OPTION is mandatory

     wav:wav        Spitting from .wav to .wav
     wav:flac       Spitting and conversion from .wav to .flac
     wav:ape        Spitting and conversion from .wav to .ape

     flac:wav       Spitting and conversion from .flac to .wav
     flac:flac      Splitting from flac to flac
     flac:ape       Spitting and conversion from .flac to .ape

     ape:wav        Spitting and conversion from .ape to .wav
     ape:flac       Spitting and conversion from .ape to .flac
     ape:ape        Splitting from ape to ape
     
     
PATH-NAME:

   *   The argument PATH-NAME is not mandatory


OTHER OPTIONS:  

     -h, --help            Print this help and exit
     -v, --version         Print the program version and date


EXAMPLES:

     pysplitcue flac:wav                    
     pysplitcue wav:flac /path/name/                  
     pysplitcue ape:wav '/path name/My directory/'  
"""

help_short = """
Usage: pysplitcue OPTIONS '/path name/My directory/'

Try: "pysplitcue --help" for long help

or: "pysplitcue -h" for generic info
"""
    

def positional_parameter():       
	"""
	valuta gli argomenti (parametri posizionali) passati dopo
	il nome del programma
	"""

	if len(sys.argv) == 1:
		print help_short
		print "pysplitcue: no argument indicated\n"
		sys.exit()


	if len(sys.argv) == 2:  
		if sys.argv[1] == "--version" or sys.argv[1] == "-v":
			print "\nPysplitcue: Version 0.6 (date 25/08/2012)"
			sys.exit()
		elif sys.argv[1] == "--help" or sys.argv[1] == "-h":
			print help_long
			sys.exit()
		else:
			try:
				get_arg = sys.argv[1]
				process_file(get_arg)
	
			except IndexError:
				print help_short
				print "pysplitcue: error: Unknown option: %s\n" % (sys.argv[1])
				sys.exit()
	
	if len(sys.argv) == 3:  
		if sys.argv[1]:
			try:
				get_arg = sys.argv[1]
				os.chdir(sys.argv[2])
				process_file(get_arg)
	
			except OSError:
				print help_short
				print ("pysplitcue: error: PathName not exist: %s\n" 
						% (sys.argv[2]))
				sys.exit()



def makedir_move(ext,name_dir):
	"""
	crea la directory e sposta i file 
	(ext:estensione, name_dir:nome directory)
	"""
	try: # se la cartella esiste non da OSError ma prosegue
		os.mkdir("%s"%(name_dir))
	except: OSError
	files = glob.glob("*%s"%(ext))
	for sposta in files: 
		# cicla sui file di una data estens. per spostarli in altra directory
		shutil.move(sposta, '%s'%(name_dir))



def process_file(get_arg):
	"""
	print in a terminal window
	"""

	call('clear',shell=True)

	print """\033[1m
== PYSPLITCUE V.0.6 ==\033[0m """

################################################################ wav input

	if  get_arg == 'wav:wav': # out .wav
		call('shnsplit -o wav -f *.cue -t "%n - %t.split" *.wav',shell=True)
		makedir_move(".split.wav","Formato-wav")
		print "\033[1m...done.\033[0m"

	elif get_arg == 'wav:flac': # out .flac
		#call('shnsplit -o flac -f *.cue -t "%n - %t .split" *.wav',shell=True)
		call('shnsplit -o flac -f *.cue -t "%n - %t" *.wav &&' 
											'cuetag *.cue *.flac',shell=True)
		makedir_move(".flac","Formato-flac")
		print "\033[1m...done.\033[0m"

	elif get_arg == 'wav:ape': # out .ape
		call('shnsplit -o ape -f *.cue -t "%n - %t" *.wav',shell=True)
		makedir_move(".ape","Formato-ape")
		print "\033[1m...done.\033[0m"

################################################################ flac input

	elif get_arg == 'flac:wav': # out .wav
		call('shnsplit -o wav -f *.cue -t "%n - %t" *.flac',shell=True)
		makedir_move(".wav","Formato-wav") 
		print "\033[1m...done.\033[0m"

	elif get_arg == 'flac:flac': # out .flac
		call('shnsplit -o flac -f *.cue -t "%n - %t.split" *.flac &&' 
									'cuetag *.cue *.split.flac',shell=True)
		makedir_move(".split.flac","Formato-flac")
		print "\033[1m...done.\033[0m"

	elif get_arg == 'flac:ape': # out .ape
		call('shnsplit -o ape -f *.cue -t "%n - %t" *.flac',shell=True)
		makedir_move(".ape","Formato-ape")
		print "\033[1m...done.\033[0m"

################################################################# ape input

	elif get_arg == 'ape:wav': # out .wav
		call('shnsplit -o wav -f *.cue -t "%n - %t" *.ape',shell=True)
		makedir_move(".wav","Formato-wav")
		#call('mkdir -p Formato-wav && mv *.wav Formato-wav',shell=True)
		print "\033[1m...done.\033[0m"

	elif get_arg == 'ape:flac': # out .flac
		call('shnsplit -o flac -f *.cue -t "%n - %t" *.ape &&' 
										'cuetag *.cue *.flac',shell=True)
		makedir_move(".flac","Formato-flac")
		print "\033[1m...done.\033[0m"

	elif get_arg == 'ape:ape': # out .ape
		call('shnsplit -o ape -f *.cue -t "%n - %t.split" *.ape',shell=True)
		makedir_move(".split.ape","Formato-ape")
		print "\033[1m...done.\033[0m"

	else:
		print "\033[31;1mInvalid option...Exit!\033[0m"


positional_parameter()
